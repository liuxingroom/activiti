<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-3.0.xsd 
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">
		
		<!-- 加载 数据配置文件-->
		<context:property-placeholder location="classpath:jdbc.properties"/>
		
		<!--扫描@Service注解  -->
		<context:component-scan base-package="com.xing.activiti.**.service"></context:component-scan>
		
		<!-- 配置数据库连接池 -->	
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
			<property name="driverClassName" value="${jdbc.driver}"></property>
			<property name="url" value="${jdbc.url}"></property>
			<property name="username" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
			<property name="filters" value="${jdbc.filters}"></property>
			<property name="maxActive" value="${jdbc.maxActive}"></property>
			<property name="initialSize" value="${jdbc.initialSize}"></property>
			<property name="maxWait" value="${jdbc.maxWait}"></property>
			<property name="minIdle" value="${jdbc.minIdle}"></property>
			<property name="timeBetweenEvictionRunsMillis" value="60000" />
			<property name="minEvictableIdleTimeMillis" value="300000" />
			<property name="validationQuery" value="SELECT 1 from dual" />
			<property name="testWhileIdle" value="true" />
			<property name="testOnBorrow" value="false" />
			<property name="testOnReturn" value="false" />
			<property name="poolPreparedStatements" value="true" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="50" />
			<property name="maxOpenPreparedStatements" value="300" />
		</bean>
		
		<!-- 引入activiti 配置文件 -->
		<import resource="../activiti.cfg.xml"/>
		<!--配置数据链接  -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<!-- 配置数据源 -->
			<property name="dataSource" ref="dataSource"></property>
			<!-- 加载mybatis配置文件（SqlMapConfig.xml） -->
			<property name="configLocation" value="classpath:mybatis/sqlMapConfig.xml"></property>			
		</bean>
		
		<!-- 配置事务 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource"  ref="dataSource"></property>
		</bean>
		
		<!-- 使用注解配置事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		
		<!-- 配置 mapper 文件 -->
		<!-- 使用mapper批量扫描器扫描mapper借口 
			规则:mapper.xml 和mapper.java在一个目录下，且同名   扫描出来的mapper，自动上spring容器注册，bean的id就是mapper的类名（首字母小写）
		 -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<!-- 注入会话工厂 -->
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
			<!-- 扫描包路径，多个包中间用半角逗号分隔开 -->
			<property name="basePackage" value="com.xing.activiti.**.dao"></property>
		</bean>
</beans>